/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uy.com.butenzar.swing;


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import uy.com.butenzar.util.SwingComponentUtil;

/**
 *
 * @author Bruno
 */
public class MainMenu extends javax.swing.JFrame {

    private SwingComponentUtil components;
    private Boolean cargaDatos = false;

    /**
     * Creates new form mainMenu
     */
    public MainMenu() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        components = new SwingComponentUtil();
    }

    private void CargarDatosDePrueba() {
        if (!cargaDatos) {
            try {
                //CARGA DE DATOS DE PRUEBA
//                IUserController uc = CentralServerFactory.getIUserController();
//                ICategoryController cc = CentralServerFactory.getICategoryController();
//                IPublicationController pc = CentralServerFactory.getIPublicationController();
//                IReservationController rc = CentralServerFactory.getIReservationController();

                //termina carga reservas
                cargaDatos = true;
                components.infoBox("La carga inicial de datos se realizó correctamente", "Éxito");
            } catch (IllegalArgumentException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
            components.errorBox("Los datos iniciales ya fueron cargados", "Alerta");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopMain = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SSHAutomation");

        javax.swing.GroupLayout desktopMainLayout = new javax.swing.GroupLayout(desktopMain);
        desktopMain.setLayout(desktopMainLayout);
        desktopMainLayout.setHorizontalGroup(
            desktopMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );
        desktopMainLayout.setVerticalGroup(
            desktopMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jMenu1.setText("Inicio");

        jMenuItem14.setText("Cargar Datos");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Registros");

        jMenuItem6.setText("Alta Usuario");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Alta Categoría");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Alta Servicio");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setText("Alta Promoción");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setText("Realizar Reserva");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem12.setText("Cancelar Reserva");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem11.setText("Actualizar Estado Reserva");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem13.setText("Actualizar Servicio");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Consultas");

        jMenuItem1.setText("Información Clientes");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Información Proveedor");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("Información Servicio");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Información Promoción");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Información Reserva");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopMain)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalVerInfoUsuario.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_VER_INFO_CLIENTE)) {
//                    internalF.toFront();
//                    return;
//                }
//            }
//
//            InternalVerInfoUsuario internalVerCliente = new InternalVerInfoUsuario(SwingComponentUtil.CTE_TIT_VER_INFO_CLIENTE);
//            desktopMain.add(internalVerCliente);
//            internalVerCliente.setVisible(true);

        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        try {
//            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalListarReservas.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_ELIMINAR_RESERVA)) {
//                    internalF.toFront();
//                    return;
//                }
//            }
//
//            InternalListarReservas internalListarReserva = new InternalListarReservas(SwingComponentUtil.CTE_TIT_ELIMINAR_RESERVA);
//            desktopMain.add(internalListarReserva);
//            internalListarReserva.setVisible(true);
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        try {
//            if (!SwingComponentUtil.existInternalFrame(InternalAltaServicio.class)) {
//                InternalAltaServicio internalAltaServicio = new InternalAltaServicio();
//
//                desktopMain.add(internalAltaServicio);
//                internalAltaServicio.setVisible(true);
//                internalAltaServicio.toFront();
//            }
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
//            if (!SwingComponentUtil.existInternalFrame(InternalAltaUsuario.class)) {
//                InternalAltaUsuario internalAltaUsuario = new InternalAltaUsuario();
//                desktopMain.add(internalAltaUsuario);
//                internalAltaUsuario.setVisible(true);
//            }
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        try {
//            if (!SwingComponentUtil.existInternalFrame(InternalRealizarReserva.class)) {
//                InternalRealizarReserva rr = new InternalRealizarReserva();
//                desktopMain.add(rr);
//                rr.setVisible(true);
//            }
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalListarCategorias.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_VER_SERVICIO)) {
//                    internalF.toFront();
//                    return;
//                }
//            }
//
//            InternalListarCategorias internallistCategorias = new InternalListarCategorias(SwingComponentUtil.CTE_TIT_VER_SERVICIO);
//            desktopMain.add(internallistCategorias);
//            internallistCategorias.setVisible(true);
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }


    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        try {
//            if (!SwingComponentUtil.existInternalFrame(InternalAltaCategoria.class)) {
//                InternalAltaCategoria internalAltaCategoria = new InternalAltaCategoria();
//
//                desktopMain.add(internalAltaCategoria);
//                internalAltaCategoria.setVisible(true);
//            }
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalListarReservas.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_ACTUALIZAR_RESERVA)) {
//                    internalF.toFront();
//                    return;
//                }
//            }
//
//            InternalListarReservas internalActualizarReserva = new InternalListarReservas(SwingComponentUtil.CTE_TIT_ACTUALIZAR_RESERVA);
//            desktopMain.add(internalActualizarReserva);
//            internalActualizarReserva.setVisible(true);

        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalListarReservas.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_VER_RESERVA)) {
//                    internalF.toFront();
//                    return;
//                }
//            }
//
//            InternalListarReservas internalActualizarReserva = new InternalListarReservas(SwingComponentUtil.CTE_TIT_VER_RESERVA);
//            desktopMain.add(internalActualizarReserva);
//            internalActualizarReserva.setVisible(true);

        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        try {
//            if (!SwingComponentUtil.existInternalFrame(InternalAltaPromocion.class)) {
//                InternalAltaPromocion internalAltaPromocion = new InternalAltaPromocion();
//
//                desktopMain.add(internalAltaPromocion);
//                internalAltaPromocion.setVisible(true);
//            }
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalVerInfoServicio.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_ACTUALIZAR_SERVICIO)) {
//                    internalF.toFront();
//                    return;
//                }
//            }

//            InternalVerInfoServicio internalActualizarServicio = new InternalVerInfoServicio(SwingComponentUtil.CTE_TIT_ACTUALIZAR_SERVICIO, null, null);
//            desktopMain.add(internalActualizarServicio);
//            internalActualizarServicio.setVisible(true);

        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
//            for (JInternalFrame internalF : desktopMain.getAllFrames()) {
//                if (internalF.getClass().equals(InternalVerInfoUsuario.class) && internalF.getTitle().equals(SwingComponentUtil.CTE_TIT_VER_INFO_PROVEEDOR)) {
//                    internalF.toFront();
//                    return;
//                }
//            }
//
//            InternalVerInfoUsuario internalVerCliente = new InternalVerInfoUsuario(SwingComponentUtil.CTE_TIT_VER_INFO_PROVEEDOR);
//            desktopMain.add(internalVerCliente);
//            internalVerCliente.setVisible(true);

        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            //en este caso tengo dos iframe para dos pantallas distintas así que tengo que hacer algo particular
            
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        try {

            CargarDatosDePrueba();
            
        } catch (IllegalArgumentException e) {
            components.errorBox(e.getMessage(), "Alerta");
        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

public static <T> Boolean existInternalFrame(Class<T> clazz){
        for(JInternalFrame internalF : desktopMain.getAllFrames()){
            if (internalF.getClass().equals(clazz)){
                internalF.toFront();
                return true;
            }
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane desktopMain;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    // End of variables declaration//GEN-END:variables

}
